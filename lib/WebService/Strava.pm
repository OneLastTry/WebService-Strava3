package WebService::Strava;
use v5.010;
use strict;
use warnings;
use autodie;
use Moo;
use Method::Signatures;
use Data::Dumper;
use Carp qw(croak);

our $DEBUG = $ENV{STRAVA_DEBUG} || 0;

# ABSTRACT: Access Strava via version 3 of the API

# VERSION: Generated by DZP::OurPkg:Version

=head1 SYNOPSIS

    use WebService::Strava;

    my $strava = WebService::Strava->new );

=head1 DESCRIPTION

  I shall write one...

=cut

use WebService::Strava::Auth;

has 'auth' => (
  is => 'ro',
  isa => sub { "WebService::Strava::Auth" },
  lazy => 1,
  builder => 1,
  handles => [ qw( get post ) ],
);

method _build_auth() {
  return WebService::Strava::Auth->new();
}

=method segment

  $strava->segment($id);

Takes a mandatory id and will retrieve a
L<WebService::Strava::Segment> with details about the Segment ID retrieved.

After instantiation it is possible to retrieve efforts listed for that segment. Takes an optional number of efforts you wish to retrieve, else will return 25. 

  $strava->segment->list_efforts("15");

=cut

use WebService::Strava::Segment;

method segment($id) {
  return WebService::Strava::Segment->new(id =>$id, auth => $self->auth);
}

=head1 ACKNOWLEDGEMENTS

Thanks to the following people!
Fred Moyer <fred@redhotpenguin.com> - Giving me Co-Maint on WebService::Strava
Paul Fenwick <pjf@cpan.org> - For being generally awesome, providing inspiration,
assistance and a lot of boiler plate for this library.

=cut

1;
